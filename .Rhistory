print('Testovaci kriterium je: ', round(kriterium, dec))
}
z_test(2, 0.5, 20, 2, 0.05, 4)
#
#
#' @param m Stredni hodnota vyberu.
#' @param s Smerodatna odchylka.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti.
#' @param dec Pocet desetinnych mist v konecnem vysledku.
#' @return Vypocita intervaly spolehlivosti pro \eqn{\mu}, oboustranny, levo- a pravostranny.
#' @export
z_test <- function(m, s, n, c, alfa, dec){
kriterium <- (m - c) / (s / sqrt(n))
o_h1p <- qnorm(p = 1 - alfa / 2)
o_h1n <- -1 * qnorm(p = 1 - alfa / 2)
l_h1 <- -1 * qnorm(p = 1 - alfa)
p_h1 <- qnorm(p = 1 - alfa)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(o_h1n, dec), ']', 'u', '[', round(o_h1p, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(o_h1p, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print('Testovaci kriterium je: ', round(kriterium, dec))
}
z_test(2, 0.5, 20, 2, 0.05, 4)
#
#
#' @param m Stredni hodnota vyberu.
#' @param s Smerodatna odchylka.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti.
#' @param dec Pocet desetinnych mist v konecnem vysledku.
#' @return Vypocita intervaly spolehlivosti pro \eqn{\mu}, oboustranny, levo- a pravostranny.
#' @export
z_test <- function(m, s, n, c, alfa, dec){
kriterium <- (m - c) / (s / sqrt(n))
o_h1p <- qnorm(p = 1 - alfa / 2)
o_h1n <- -1 * qnorm(p = 1 - alfa / 2)
l_h1 <- -1 * qnorm(p = 1 - alfa)
p_h1 <- qnorm(p = 1 - alfa)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(o_h1n, dec), ']', 'u', '[', round(o_h1p, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print('Testovaci kriterium je: ', round(kriterium, dec))
}
z_test(2, 0.5, 20, 2, 0.05, 4)
#
#
#' @param m Stredni hodnota vyberu.
#' @param s Smerodatna odchylka.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti.
#' @param dec Pocet desetinnych mist v konecnem vysledku.
#' @return Vypocita intervaly spolehlivosti pro \eqn{\mu}, oboustranny, levo- a pravostranny.
#' @export
z_test <- function(m, s, n, c, alfa, dec){
kriterium <- (m - c) / (s / sqrt(n))
o_h1p <- qnorm(p = 1 - alfa / 2)
o_h1n <- -1 * qnorm(p = 1 - alfa / 2)
l_h1 <- -1 * qnorm(p = 1 - alfa)
p_h1 <- qnorm(p = 1 - alfa)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(o_h1n, dec), ']', 'u', '[', round(o_h1p, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print(paste('Testovaci kriterium je: ', round(kriterium, dec)))
}
z_test(2, 0.5, 20, 2, 0.05, 4)
z_test(5, 0.5, 20, 2, 0.05, 4)
z_test(5, 3, 300, 2, 0.05, 4)
z_test(5, 4, 300, 2, 0.05, 4)
z_test(5, 4, 300, 4, 0.05, 4)
z_test(5, 4, 30, 4, 0.05, 4)
devtools::document()
devtools::document()
devtools::document()
z_test(3.123, 0.74, 35, 3.001, 0.05, 4)
devtools::document()
#
#
#' @param m Stredni hodnota vyberu.
#' @param s Smerodatna odchylka vyberu.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti.
#' @param dec Pocet desetinnych mist v konecnem vysledku.
#' @return Vypocita kriticke obory a testovaci kriterium \eqn{z}-testu.
#' @export
z_test <- function(m, s, n, c, alfa, dec){
kriterium <- (m - c) / (s / sqrt(n))
o_h1p <- qt(p = 1 - alfa / 2, df = n - 1)
o_h1n <- -1 * qt(p = 1 - alfa / 2, df = n - 1)
l_h1 <- -1 * qt(p = 1 - alfa, df = n - 1)
p_h1 <- qt(p = 1 - alfa, df = n - 1)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(o_h1n, dec), ']', 'u', '[', round(o_h1p, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print(paste('Testovaci kriterium je: ', round(kriterium, dec)))
}
devtools::document()
devtools::document()
#
#
#' @param m Stredni hodnota vyberu.
#' @param s Smerodatna odchylka.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti.
#' @param dec Pocet desetinnych mist v konecnem vysledku.
#' @return Vypocita kriticke obory a testovaci kriterium \eqn{z}-testu.
#' @export
z_test <- function(m, s, n, c, alfa, dec){
kriterium <- (m - c) / (s / sqrt(n))
o_h1p <- qnorm(p = 1 - alfa / 2)
o_h1n <- -1 * qnorm(p = 1 - alfa / 2)
l_h1 <- -1 * qnorm(p = 1 - alfa)
p_h1 <- qnorm(p = 1 - alfa)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(o_h1n, dec), ']', 'u', '[', round(o_h1p, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print(paste('Testovaci kriterium je: ', round(kriterium, dec)))
}
#
#
#' @param m Stredni hodnota vyberu.
#' @param s Smerodatna odchylka vyberu.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti.
#' @param dec Pocet desetinnych mist v konecnem vysledku.
#' @return Vypocita kriticke obory a testovaci kriterium \eqn{z}-testu.
#' @export
t_test <- function(m, s, n, c, alfa, dec){
kriterium <- (m - c) / (s / sqrt(n))
o_h1p <- qt(p = 1 - alfa / 2, df = n - 1)
o_h1n <- -1 * qt(p = 1 - alfa / 2, df = n - 1)
l_h1 <- -1 * qt(p = 1 - alfa, df = n - 1)
p_h1 <- qt(p = 1 - alfa, df = n - 1)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(o_h1n, dec), ']', 'u', '[', round(o_h1p, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print(paste('Testovaci kriterium je: ', round(kriterium, dec)))
}
devtools::document()
t_test(40, 20, 15, 37, 0.05, 4)
z_test(40, 20, 15, 37, 0.05, 4)
devtools::document()
devtools::document()
z_test(40, 20, 15, 37)
z_test(40, 20, 15, 37, dec = 5)
devtools::document()
devtools::document()
#' Funkce pro vypocet testovaciho kriteria a kritickych oboru testu o rozptylu.
#
#
#' @param s Smerodatna odchylka vyberu.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti (je 0.05, pokud neni stanoveno jinak).
#' @param dec Pocet desetinnych mist v konecnem vysledku (je 10, pokud neni stanoveno jinak).
#' @return Vypocita kriticke obory a testovaci kriterium \eqn{t}-testu.
#' @export
rozptyl_test <- function(s, n, c, alfa = 0.05, dec = 10){
kriterium <- ((n - 1) * s^2) / c
o_h1p <- qchisq(p = alfa / 2, df = n - 1)
o_h1n <- qchisq(p = 1 - alfa / 2, df = n - 1)
l_h1 <- qchisq(p = alfa, df = n - 1)
p_h1 <- qchisq(p = 1 - alfa, df = n - 1)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (0', ',', round(o_h1n, dec), ']', 'u', '[', round(o_h1p, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (0', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print(paste('Testovaci kriterium je: ', round(kriterium, dec)))
}
rozptyl_test(20, 35, 18, dec = 4)
rozptyl_test(20, 35, 19, dec = 4)
#' Funkce pro vypocet testovaciho kriteria a kritickych oboru testu o rozptylu.
#
#
#' @param s Smerodatna odchylka vyberu.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti (je 0.05, pokud neni stanoveno jinak).
#' @param dec Pocet desetinnych mist v konecnem vysledku (je 10, pokud neni stanoveno jinak).
#' @return Vypocita kriticke obory a testovaci kriterium \eqn{t}-testu.
#' @export
rozptyl_test <- function(s, n, c, alfa = 0.05, dec = 10){
kriterium <- ((n - 1) * s^2) / c
o_h1p <- qchisq(p = alfa / 2, df = n - 1)
o_h1n <- qchisq(p = 1 - alfa / 2, df = n - 1)
l_h1 <- qchisq(p = alfa, df = n - 1)
p_h1 <- qchisq(p = 1 - alfa, df = n - 1)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (0', ',', round(o_h1p, dec), ']', 'u', '[', round(o_h1n, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (0', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print(paste('Testovaci kriterium je: ', round(kriterium, dec)))
}
rozptyl_test(20, 35, 19, dec = 4)
#' Funkce pro vypocet testovaciho kriteria a kritickych oboru testu o rozptylu.
#
#
#' @param s Smerodatna odchylka vyberu.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti (je 0.05, pokud neni stanoveno jinak).
#' @param dec Pocet desetinnych mist v konecnem vysledku (je 10, pokud neni stanoveno jinak).
#' @return Vypocita kriticke obory a testovaci kriterium \eqn{t}-testu.
#' @export
rozptyl_test <- function(s, n, c, alfa = 0.05, dec = 10){
kriterium <- ((n - 1) * s) / c
o_h1p <- qchisq(p = alfa / 2, df = n - 1)
o_h1n <- qchisq(p = 1 - alfa / 2, df = n - 1)
l_h1 <- qchisq(p = alfa, df = n - 1)
p_h1 <- qchisq(p = 1 - alfa, df = n - 1)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (0', ',', round(o_h1p, dec), ']', 'u', '[', round(o_h1n, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (0', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print(paste('Testovaci kriterium je: ', round(kriterium, dec)))
}
rozptyl_test(20, 35, 19, dec = 4)
#' Funkce pro vypocet testovaciho kriteria a kritickych oboru testu o rozptylu.
#
#
#' @param s Smerodatna odchylka vyberu.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti (je 0.05, pokud neni stanoveno jinak).
#' @param dec Pocet desetinnych mist v konecnem vysledku (je 10, pokud neni stanoveno jinak).
#' @return Vypocita kriticke obory a testovaci kriterium \eqn{t}-testu.
#' @export
rozptyl_test <- function(s, n, c, alfa = 0.05, dec = 10){
kriterium <- ((n - 1) * s^2) / c
o_h1p <- qchisq(p = alfa / 2, df = n - 1)
o_h1n <- qchisq(p = 1 - alfa / 2, df = n - 1)
l_h1 <- qchisq(p = alfa, df = n - 1)
p_h1 <- qchisq(p = 1 - alfa, df = n - 1)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (0', ',', round(o_h1p, dec), ']', 'u', '[', round(o_h1n, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (0', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print(paste('Testovaci kriterium je: ', round(kriterium, dec)))
}
rozptyl_test(20, 35, 15, dec = 4)
rozptyl_test(20.12, 35, 20.04, dec = 4)
rozptyl_test(20.12, 35, 20.12, dec = 4)
rozptyl_test(23, 15, 25)
rozptyl_test(23, 8, 25)
rozptyl_test(25, 8, 25)
rozptyl_test(25, 10, 25)
#' Funkce pro vypocet testovaciho kriteria a kritickych oboru testu o rozptylu.
#
#
#' @param s_2 Rozptyl vyberu.
#' @param n Pocet pozorovani.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu.
#' @param alfa Hladina vyznamnosti (je 0.05, pokud neni stanoveno jinak).
#' @param dec Pocet desetinnych mist v konecnem vysledku (je 10, pokud neni stanoveno jinak).
#' @return Vypocita kriticke obory a testovaci kriterium \eqn{t}-testu.
#' @export
rozptyl_test <- function(s_2, n, c, alfa = 0.05, dec = 10){
kriterium <- ((n - 1) * s_2) / c
o_h1p <- qchisq(p = alfa / 2, df = n - 1)
o_h1n <- qchisq(p = 1 - alfa / 2, df = n - 1)
l_h1 <- qchisq(p = alfa, df = n - 1)
p_h1 <- qchisq(p = 1 - alfa, df = n - 1)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (0', ',', round(o_h1p, dec), ']', 'u', '[', round(o_h1n, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (0', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print(paste('Testovaci kriterium je: ', round(kriterium, dec)))
}
rozptyl_test(20, 15, 17)
rozptyl_test(20, 15, 17, dec = 4)
devtools::document()
devtools::document()
devtools::document()
#' @param m_1 Stredni hodnota prvniho vyberu.
#' @param m_2 Stredni hodnota druheho vyberu.
#' @param s_1 Smerodatna odchylka prvniho vyberu.
#' @param s_2 Smerodatna odchylka druheho vyberu.
#' @param n_1 Pocet pozorovani v prvnim vyberu.
#' @param n_2 Pocet pozorovani v prvnim vyberu.
#' @param alfa Hladina vyznamnosti (je 0.05, pokud neni stanoveno jinak).
#' @param dec Pocet desetinnych mist v konecnem vysledku (je 10, pokud neni stanoveno jinak).
#' @return Vypocita intervaly spolehlivosti pro rozdil \eqn{\mu_1 - \mu_2}, oboustranny, levo- a pravostranny.
#' @export
is_mu_s_zname_2 <- function(m_1, m_2, s_1, s_2, n_1, n_2, alfa = 0.05, dec = 10){
o_d <- m_1 - m_2 - ((sqrt((s_1^2 / n_1) + (s_2^2 / n_2))) * qnorm(p = 1 - alfa / 2))
o_h <- m_1 - m_2 + ((sqrt((s_1^2 / n_1) + (s_2^2 / n_2))) * qnorm(p = 1 - alfa / 2))
l_d <- m_1 - m_2 - ((sqrt((s_1^2 / n_1) + (s_2^2 / n_2))) * qnorm(p = 1 - alfa))
p_h <- m_1 - m_2 + ((sqrt((s_1^2 / n_1) + (s_2^2 / n_2))) * qnorm(p = 1 - alfa))
print('Oboustranny IS ----------------------------')
print(paste('Dolni hranice je: ', round(o_d, dec)))
print(paste('Holni hranice je: ', round(o_h, dec)))
print('Levostranny IS ----------------------------')
print(paste('Dolni hranice je: ', round(l_d, dec)))
print('Horni hranice je: + nekonecno')
print('Pravostranny IS ---------------------------')
print('Dolni hranice je: - nekonecno')
print(paste('Horni hranice je: ', round(p_h, dec)))
}
devtools::document()
is_mu_s_zname_2(24, 23, 6, 5, 20, 20, dec = 5)
#
#
#' @param s_1 Smerodatna odchylka prvniho vyberu.
#' @param s_2 Smerodatna odchylka druheho vyberu
#' @param n_1 Pocet pozorovani prvniho vyberu.
#' @param n_2 Pocet pozorovani druheho vyberu.
#' @param alfa Hladina vyznamnosti (je 0.05, pokud neni stanoveno jinak).
#' @param dec Pocet desetinnych mist v konecnem vysledku (je 10, pokud neni stanoveno jinak).
#' @return Vypocita intervaly spolehlivosti pro spolecny rozptyl \eqn{\sigma^2}, oboustranny, levo- a pravostranny.
#' @export
is_s_mu_nezname_2 <- function(s, n, alfa = 0.05, dec = 10){
s_ast <- (((n_1 - 1) * s_1^2 + (n_2 - 1) * s_2^2)) / (n_1 + n_2 - 2)
o_d <- ((n_1 + n_2 - 2) * s_ast) / (qchisq(p = 1 - alfa / 2, df = n_1 + n_2 - 2))
o_h <- ((n_1 + n_2 - 2) * s_ast) / (qchisq(p = alfa / 2, df = n_1 + n_2 - 2))
l_d <- ((n_1 + n_2 - 2) * s_ast) / (qchisq(p = 1 - alfa, df = n_1 + n_2 - 2))
p_h <- ((n_1 + n_2 - 2) * s_ast) / (qchisq(p = alfa, df = n_1 + n_2 - 2))
print('Oboustranny IS ----------------------------')
print(paste('Dolni hranice je: ', round(o_d, dec)))
print(paste('Holni hranice je: ', round(o_h, dec)))
print('Levostranny IS ----------------------------')
print(paste('Dolni hranice je: ', round(l_d, dec)))
print('Horni hranice je: + nekonecno')
print('Pravostranny IS ---------------------------')
print('Dolni hranice je: - nekonecno')
print(paste('Horni hranice je: ', round(p_h, dec)))
}
devtools::document()
devtools::document()
#
#
#' @param s_1 Smerodatna odchylka prvniho vyberu.
#' @param s_2 Smerodatna odchylka druheho vyberu
#' @param n_1 Pocet pozorovani prvniho vyberu.
#' @param n_2 Pocet pozorovani druheho vyberu.
#' @param alfa Hladina vyznamnosti (je 0.05, pokud neni stanoveno jinak).
#' @param dec Pocet desetinnych mist v konecnem vysledku (je 10, pokud neni stanoveno jinak).
#' @return Vypocita intervaly spolehlivosti pro spolecny rozptyl \eqn{\sigma^2}, oboustranny, levo- a pravostranny.
#' @export
is_s_mu_nezname_2 <- function(s_1, s_2, n_1, n_2, alfa = 0.05, dec = 10){
s_ast <- (((n_1 - 1) * s_1^2 + (n_2 - 1) * s_2^2)) / (n_1 + n_2 - 2)
o_d <- ((n_1 + n_2 - 2) * s_ast) / (qchisq(p = 1 - alfa / 2, df = n_1 + n_2 - 2))
o_h <- ((n_1 + n_2 - 2) * s_ast) / (qchisq(p = alfa / 2, df = n_1 + n_2 - 2))
l_d <- ((n_1 + n_2 - 2) * s_ast) / (qchisq(p = 1 - alfa, df = n_1 + n_2 - 2))
p_h <- ((n_1 + n_2 - 2) * s_ast) / (qchisq(p = alfa, df = n_1 + n_2 - 2))
print('Oboustranny IS ----------------------------')
print(paste('Dolni hranice je: ', round(o_d, dec)))
print(paste('Holni hranice je: ', round(o_h, dec)))
print('Levostranny IS ----------------------------')
print(paste('Dolni hranice je: ', round(l_d, dec)))
print('Horni hranice je: + nekonecno')
print('Pravostranny IS ---------------------------')
print('Dolni hranice je: - nekonecno')
print(paste('Horni hranice je: ', round(p_h, dec)))
}
devtools::document()
is_s_mu_nezname_2(6, 4, 20, 20, dec = 5)
#' @param m_1 Stredni hodnota prvniho vyberu.
#' @param m_2 Stredni hodnota druheho vyberu.
#' @param s_1 Smerodatna odchylka prvniho vyberu.
#' @param s_2 Smerodatna odchylka druheho vyberu.
#' @param n_1 Pocet pozorovani v prvnim vyberu.
#' @param n_2 Pocet pozorovani v prvnim vyberu.
#' @param alfa Hladina vyznamnosti (je 0.05, pokud neni stanoveno jinak).
#' @param dec Pocet desetinnych mist v konecnem vysledku (je 10, pokud neni stanoveno jinak).
#' @return Vypocita intervaly spolehlivosti pro rozdil \eqn{\mu_1 - \mu_2}, oboustranny, levo- a pravostranny.
#' @export
is_mu_s_nezname_2 <- function(m_1, m_2, s_1, s_2, n_1, n_2, alfa = 0.05, dec = 10){
s_ast <- sqrt((((n_1 - 1) * s_1^2 + (n_2 - 1) * s_2^2)) / (n_1 + n_2 - 2))
o_d <- m_1 - m_2 - (s_ast * (sqrt((s_1^2 / n_1) + (s_2^2 / n_2))) * qt(p = 1 - alfa / 2, df = n_1 + n_2 - 2))
o_h <- m_1 - m_2 + (s_ast * (sqrt((s_1^2 / n_1) + (s_2^2 / n_2))) * qt(p = 1 - alfa / 2, df = n_1 + n_2 - 2))
l_d <- m_1 - m_2 - (s_ast * (sqrt((s_1^2 / n_1) + (s_2^2 / n_2))) * qt(p = 1 - alfa, df = n_1 + n_2 - 2))
p_h <- m_1 - m_2 + (s_ast * (sqrt((s_1^2 / n_1) + (s_2^2 / n_2))) * qt(p = 1 - alfa, df = n_1 + n_2 - 2))
print('Oboustranny IS ----------------------------')
print(paste('Dolni hranice je: ', round(o_d, dec)))
print(paste('Holni hranice je: ', round(o_h, dec)))
print('Levostranny IS ----------------------------')
print(paste('Dolni hranice je: ', round(l_d, dec)))
print('Horni hranice je: + nekonecno')
print('Pravostranny IS ---------------------------')
print('Dolni hranice je: - nekonecno')
print(paste('Horni hranice je: ', round(p_h, dec)))
}
devtools:document()
devtools::document()
is_mu_s_nezname_2(30, 20, 5, 6, 30, 30, dec = 5)
is_mu_s_nezname_2(30, 20, 5, 6, 30, k, dec = 5)
devtools:document()
devtools::document()
is_s_podil_2(5, 3, 10, 10, dec = 5)
devtools::document()
devtools::document()
devtools::document()
approxfun(2.3)
approxfun(2.3, 3.2)
approxfun(3, 1)
approx(2)
approx(2, 3)
devtools::document()
devtools::document()
is_s_podil_2(3, 2, 10, 10, dec = 5)
welch(4, 2, 10, 10)
devtools:document()
devtools::document()
z_test_2(5, 4, 3, 4, 10, 10, 0, dec = 5)
devtools::document()
devtools::document()
z_test_2(30, 25, 3, 4, 20, 20, dec = 5)
devtools::document()
#' @param m_2 Stredni hodnota druheho vyberu.
#' @param s_1 Smerodatna odchylka prvniho vyberu.
#' @param s_2 Smerodatna odchylka druheho vyberu.
#' @param n_1 Pocet pozorovani prvniho vyberu.
#' @param n_2 Pocet pozorovani druheho vyberu.
#' @param c Konstanta, se kterou se porovnava stredni hodnota vyberu (je 0, pokud neni stanoveho jinak).
#' @param alfa Hladina vyznamnosti (je 0.05, pokud neni stanoveno jinak).
#' @param dec Pocet desetinnych mist v konecnem vysledku (je 10, pokud neni stanoveno jinak).
#' @return Vypocita kriticke obory a testovaci kriterium dvouvyberoveho \eqn{t}-testu.
#' @export
t_test_2 <- function(m_1, m_2, s_1, s_2, n_1, n_2, c = 0, alfa = 0.05, dec = 10){
s_ast <- sqrt((((n_1 - 1) * s_1^2 + (n_2 - 1) * s_2^2)) / (n_1 + n_2 - 2))
kriterium <- (m_1 - m_2 - c) / (s_ast * sqrt((1 / n_1) + (1 / n_2)))
o_h1p <- qt(p = 1 - alfa / 2, df = n_1 + n_2 - 2)
o_h1n <- -1 * qt(p = 1 - alfa / 2, df = n_1 + n_2 - 2)
l_h1 <- -1 * qt(p = 1 - alfa, df = n_1 + n_2 - 2)
p_h1 <- qt(p = 1 - alfa, df = n_1 + n_2 - 2)
print('Oboustranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(o_h1n, dec), ']', 'u', '[', round(o_h1p, dec), ',',  '+ nekonecno)'))
print('Levostranna H1 -------------------------------------')
print(paste('W je: (- nekonecno', ',', round(l_h1, dec), ']'))
print('Pravostranna H1 ------------------------------------')
print(paste('W je:', '[', round(p_h1, dec), ',',  '+ nekonecno)'))
print('----------------------------------------------------')
print(paste('Testovaci kriterium je: ', round(kriterium, dec)))
}
t_test_2(5, 4, 2, 2, 10, 10, dec = 5)
devtools::document()
devtools::document()
devtools::document()
f_test(5, 3, 20, 15, dec = 5)
devtools::document()
devtools::document()
f_test(5, 3, 20, 15, dec = 5)
devtools::document()
devtools::document()
is_theta(0.3, 20, dec = 5)
devtools::document()
is_theta(0.3, 40, dec = 5)
is_theta(0.3, 50, dec = 5)
is_theta(0.6, 40, dec = 5)
is_theta(0.34, 100, dec = 5)
is_theta(0.34, 100, dec = 4)
is_theta(0.34, 100, dec = 4)
is_theta(0.34, 10, dec = 4)
devtools::document()
theta_test(m = 16/1000, 1000, 0.01, dec = 4)
devtools::document()
theta_test(m = 16/1000, 1000, 0.01, dec = 4)
devtools::document()
theta_test(m = 16/1000, 1000, 0.01, dec = 4)
devtools::document()
is_theta_2(97/200, 162/300, 200, 300)
is_theta_2(97/200, 162/300, 200, 300, dec = 5)
is_theta_2(97/200, 162/300, 200, 300, dec = 4)
devtools::document()
theta_test_2(97/200, 162/300, 200, 300, dec = 4)
devtools::document()
theta_test_2(97/200, 162/300, 200, 300, dec = 4)
